{"version":3,"sources":["DragContainer.jsx","subscriptionManager.js","helpers.js","cappedArray.js","DragCard.jsx","App.js","serviceWorker.js","index.js"],"names":["styled","div","_templateObject","unsubscribeFrom","subscriptions","key","subscription","maybeFunc","_len","arguments","length","args","Array","_key","apply","safelyCall","unsubscribe","bind","SubscriptionManager","_this","this","Object","classCallCheck","add","nameOrSubscriptions","keys","forEach","name","Error","concat","has","get","undefined","reduce","CappedArray","size","push","newData","data","shift","clear","getLatest","HOME_POINT","position","gravity","AWAY_POINT","getWinningRestingPoint","restingPoints","velocity","target","restingPoint","score","getRestingPointScore","_ref","restingPointPosition","Math","abs","toTouchEvent","e","preventDefault","mainTouch","touches","x","screenX","y","screenY","getNextVelocity","delta","index","getVelocity","deltas","clamp","number","bottom","top","getBezierHandle","averageVelocityForMove","relativeMagnitudeOfVelocity","clampedRMV","bezierA","bezierB","console","log","DragCard","props","possibleConstructorReturn","getPrototypeOf","call","handleTouchStart","card","current","style","transition","handleTouchMove","touchPosition","axis","lastTouchPosition","move","handleTouchEnd","_getBezierHandle","updatePosition","currentPosition","pos","transform","toUpperCase","observables","React","createRef","touchStart$","fromEvent","pipe","map","touchEnd$","touchMove$","assign","subscribe","children","react_default","a","createElement","Card","ref","Component","DragCard_templateObject","App","DragContainer","src_DragCard","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.65850765.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport default styled.div`\n  height: 100%;\n  width: 100%;\n`;","import { safelyCall } from './helpers';\n\nconst unsubscribeFrom = (subscriptions, key) => {\n  const subscription = subscriptions[key];\n  if (!subscription) return subscriptions;\n\n  safelyCall(subscription.unsubscribe.bind(subscription));\n  return subscriptions;\n};\n\nclass SubscriptionManager {\n  constructor() {\n    this.subscriptions = {};\n  }\n\n  add = (nameOrSubscriptions, subscription) => {\n    if (typeof nameOrSubscriptions === 'object') {\n      Object\n        .keys(nameOrSubscriptions)\n        .forEach((name) => {\n          this.add(name, nameOrSubscriptions[name]);\n        });\n    } else if (typeof nameOrSubscriptions === 'string') {\n      if (this.has(nameOrSubscriptions)) {\n        throw new Error(`Subscription with name '${nameOrSubscriptions}' already exists`);\n      }\n\n      this.subscriptions[nameOrSubscriptions] = subscription;\n    } else {\n      throw new Error(`Invalid name or subscription: ${nameOrSubscriptions}`);\n    }\n  }\n\n  has = name => !!this.get(name)\n\n  get = name => this.subscriptions[name]\n\n  unsubscribe = (name = '') => {\n    const { subscriptions } = this;\n\n    if (!name) {\n      Object.keys(subscriptions).reduce(unsubscribeFrom, subscriptions);\n\n      this.subscriptions = {};\n    } else {\n      unsubscribeFrom(subscriptions, name);\n\n      delete subscriptions[name];\n    }\n  }\n}\n\nexport default SubscriptionManager;\n","export const safelyCall = (maybeFunc, ...args) => {\n  if (typeof maybeFunc === 'function') {\n    return maybeFunc(...args);\n  }\n  return null;\n};\n","class CappedArray {\n  constructor(size) {\n    this.size = size;\n    this.data = [];\n  }\n\n  push = (newData) => {\n    const { data, size } = this;\n    data.push(newData);\n    \n    if (data.length > size) {\n      data.shift();\n    }\n  }\n\n  clear = () => {\n    this.data = [];\n  }\n\n  get = () => {\n    return this.data;\n  }\n\n  getLatest = () => {\n    return this.data[this.data.length - 1];\n  }\n}\n\nexport default CappedArray;\n","import React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport { fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport SubscriptionManager from './subscriptionManager';\nimport CappedArray from './cappedArray';\n\nconst HOME_POINT = {\n  position: 0,\n  gravity: 10,\n};\n\nconst AWAY_POINT = {\n  position: 500,\n  gravity: 10,\n};\n\nconst SLIDE_EFFECT = 10;\n\nconst APPROX_MAX_DIFFERENCE = 20;\n\nconst getWinningRestingPoint = (restingPoints, position, velocity) => restingPoints\n  .reduce((target, restingPoint) => {\n    const score = getRestingPointScore(restingPoint, position, velocity);\n    if (score > target.score) return { score, restingPoint };\n\n    return target;\n  }, { score: 0, restingPoint: null })\n  .restingPoint;\n\nconst getRestingPointScore = ({ position: restingPointPosition, gravity }, position, velocity) =>\n  gravity / Math.abs(restingPointPosition - (position + velocity * SLIDE_EFFECT));\n\nconst toTouchEvent = (e) => {\n  e.preventDefault();\n\n  const mainTouch = e.touches[0];\n\n  const { screenX, screenY } = mainTouch;\n  \n  return { x: screenX, y: screenY };\n};\n\nconst getNextVelocity = (\n  velocity,\n  delta,\n  index\n) => {\n  const factor = (1 / (index + 1));\n\n  return velocity + (delta * factor);\n};\n\nconst getVelocity = (deltas) => deltas.reduce(getNextVelocity, 0);\n\nconst signsAreDifferent = (a, b) => a * b < 0;\n\nconst ANIMATION_TIME = .06\n\nconst clamp = (number, bottom, top) => {\n  if (number > top) return top;\n  if (number < bottom) return bottom;\n  return number;\n}\n\nconst getBezierHandle = (velocity, delta) => {\n  const averageVelocityForMove = delta * ANIMATION_TIME;\n\n  const relativeMagnitudeOfVelocity = (Math.abs(velocity) - Math.abs(averageVelocityForMove)) / APPROX_MAX_DIFFERENCE; // why 20?;\n  const clampedRMV = clamp(relativeMagnitudeOfVelocity, -1, 1);\n\n  let bezierA = -0.5 * clampedRMV + 0.5; // A = -(1/2)rmv + 0.5\n  let bezierB = 0.5 * clampedRMV + 0.5; // B = (1/2)rmv + 0.5\n\n  bezierA = clamp(bezierA, 0, 1); // prevent spilling outside logical range\n  bezierB = clamp(bezierB, -1, 1); // prevent spilling outside logical range\n\n  if (signsAreDifferent(velocity, averageVelocityForMove)) { // if moving in the wrong direction\n    bezierB *= -1; // flip B\n  }\n\n  console.log({\n    bezierA,\n    bezierB,\n    delta,\n    relativeMagnitudeOfVelocity,\n    velocity,\n    averageVelocityForMove,\n  });\n\n  return { bezierA, bezierB };\n}\n\nclass DragCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.axis = props.axis || 'y';\n\n    this.currentPosition = 0;\n    this.lastTouchPosition = null;\n    this.deltas = new CappedArray(3);\n\n    this.restingPoints = [HOME_POINT, AWAY_POINT];\n\n    this.observables = {};\n    this.subscriptions = new SubscriptionManager();\n\n    this.card = React.createRef();\n  }\n\n  componentDidMount() {\n    const { current } = this.card || {};\n\n    if (!current) return;\n\n    const touchStart$ = fromEvent(current, 'touchstart').pipe(map(toTouchEvent));\n    const touchEnd$ = fromEvent(current, 'touchend');\n    const touchMove$ = fromEvent(current, 'touchmove').pipe(map(toTouchEvent));\n\n    Object.assign(this.observables, {\n      touchStart$,\n      touchEnd$,\n      touchMove$,\n    });\n\n    this.subscriptions.add({\n      handleTouchStart: touchStart$.subscribe(this.handleTouchStart),\n      handleTouchMove: touchMove$.subscribe(this.handleTouchMove),\n      handleTouchEnd: touchEnd$.subscribe(this.handleTouchEnd),\n    });\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.unsubscribe();\n  }\n\n  handleTouchStart = (e) => {\n    this.card.current.style.transition = '';\n  }\n\n  handleTouchMove = (e) => {\n    const touchPosition = e[this.axis];\n\n    if (this.lastTouchPosition) {\n      const delta = touchPosition - this.lastTouchPosition;\n\n      this.move(delta);\n\n      this.deltas.push(delta);\n    }\n\n    this.lastTouchPosition = touchPosition;\n  }\n\n  handleTouchEnd = () => {\n    const velocity = getVelocity(this.deltas.get());\n\n    const restingPoint = getWinningRestingPoint(this.restingPoints, this.lastTouchPosition, velocity);\n    if (!restingPoint) return;\n\n    const { position: restingPointPosition } = restingPoint;\n\n    const delta = restingPointPosition - this.lastTouchPosition;\n\n    const { bezierA, bezierB } = getBezierHandle(velocity, delta);\n\n    this.card.current.style.transition = `transform 0.6s cubic-bezier(${bezierA}, ${bezierB}, 0.5, 1)`;\n\n    this.deltas.clear();\n    this.lastTouchPosition = null;\n\n    this.updatePosition(restingPointPosition);\n  }\n\n  move = (delta) => {\n    this.updatePosition(this.currentPosition + delta);\n  }\n\n  updatePosition = (pos) => {\n    const { current: { style } } = this.card;\n\n    style.transform = `translate${this.axis.toUpperCase()}(${pos}px)`;\n\n    this.currentPosition = pos;\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Card ref={this.card}>\n        {children}\n      </Card>\n    ) \n  }\n}\n\nconst Card = styled.div`\n  width: 100px;\n  height: 100px;\n  background: red;\n  position: absolute;\n`;\n\nexport default DragCard;\n","import React, { Component } from 'react';\nimport './App.css';\nimport DragContainer from './DragContainer';\nimport DragCard from './DragCard';\n\nclass App extends Component {\n  render() {\n    return (\n      <DragContainer>\n        <DragCard>\n          <span>Hello</span>\n        </DragCard>\n      </DragContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}