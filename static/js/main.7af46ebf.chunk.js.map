{"version":3,"sources":["DragContainer.jsx","cappedArray.js","helpers.js","subscriptionManager.js","draggableHelpers.js","Draggable.jsx","ResizeHook.jsx","DraggableCard.jsx","App.js","serviceWorker.js","index.js"],"names":["styled","div","_templateObject","CappedArray","size","_this","this","Object","classCallCheck","push","newData","data","length","shift","clear","get","getLatest","safelyCall","maybeFunc","_len","arguments","args","Array","_key","apply","unsubscribeFrom","subscriptions","key","subscription","unsubscribe","bind","SubscriptionManager","initialSubscriptionsMap","undefined","add","nameOrSubscriptions","keys","forEach","name","Error","concat","has","reduce","toTouchEvent","e","preventDefault","mainTouch","touches","x","screenX","y","screenY","getWinningRestingPoint","restingPoints","target","restingPoint","_getRestingPointScore","getRestingPointScore","score","position","_ref","_ref2","maybeRestingPointPosition","getPosition","gravity","velocity","slideEffect","element","restingPointPosition","Number","isInteger","Math","abs","getNextVelocity","delta","index","getVelocity","deltas","clamp","number","bottom","top","getBezierHandle","animationTime","_ref3$approxMaxDiffer","approxMaxDifference","averageVelocityForMove","relativeMagnitudeOfVelocity","clampedRMV","bezierA","bezierB","AXIS","DEFAULT_AXIS","DEFAULT_STARTING_POSITION","DEFAULT_ANIMATION_MS","DEFAULT_SLIDE_EFFECT","Draggable","props","possibleConstructorReturn","getPrototypeOf","call","init","observables","current","draggableRef","console","log","touchStart$","fromEvent","pipe","map","touchEnd$","touchMove$","handleTouchStart","subscribe","handleTouchMove","handleTouchEnd","style","transition","touchPosition","axis","lastTouchPosition","move","animateToClosestRestingPoint","updatePosition","currentPosition","pos","transform","toUpperCase","animateTo","point","animationDuration","targetPosition","_getBezierHandle","onAnimateTo","getClosestRestingPoint","_this$props","_this$props$slideEffe","_this$props$animation","restingPointResult","_props$axis","_props$startingPositi","startingPosition","React","createRef","children","Component","ResizeHook","handleResize","onResize","resizeSubscription","window","debounceTime","getAwayPosition","el","parentElement","clientHeight","HOME_POINT","id","AWAY_POINT","DraggableCard","state","currentRestingPoint","getRestingPointFromId","find","handleAnimateTo","rp","handleClick","_this2","react_default","a","createElement","src_Draggable","Fragment","onClick","type","right","src_ResizeHook","Card","ref","DraggableCard_templateObject","App","DragContainer","src_DraggableCard","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7af46ebf.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport default styled.div`\n  height: 100%;\n  width: 50%;\n  background-color: #eee;\n  position: relative;\n  overflow: hidden;\n`;","class CappedArray {\n  constructor(size) {\n    this.size = size;\n    this.data = [];\n  }\n\n  push = (newData) => {\n    const { data, size } = this;\n    data.push(newData);\n    \n    if (data.length > size) {\n      data.shift();\n    }\n  }\n\n  clear = () => {\n    this.data = [];\n  }\n\n  get = () => {\n    return this.data;\n  }\n\n  getLatest = () => {\n    return this.data[this.data.length - 1];\n  }\n}\n\nexport default CappedArray;\n","export const safelyCall = (maybeFunc, ...args) => {\n  if (typeof maybeFunc === 'function') {\n    return maybeFunc(...args);\n  }\n  return null;\n};\n","import { safelyCall } from './helpers';\n\nconst unsubscribeFrom = (subscriptions, key) => {\n  const subscription = subscriptions[key];\n  if (!subscription) return subscriptions;\n\n  safelyCall(subscription.unsubscribe.bind(subscription));\n  return subscriptions;\n};\n\nclass SubscriptionManager {\n  constructor(initialSubscriptionsMap = {}) {\n    this.subscriptions = initialSubscriptionsMap;\n  }\n\n  add = (nameOrSubscriptions, subscription) => {\n    if (typeof nameOrSubscriptions === 'object') {\n      Object\n        .keys(nameOrSubscriptions)\n        .forEach((name) => {\n          this.add(name, nameOrSubscriptions[name]);\n        });\n    } else if (typeof nameOrSubscriptions === 'string') {\n      if (this.has(nameOrSubscriptions)) {\n        throw new Error(`Subscription with name '${nameOrSubscriptions}' already exists`);\n      }\n\n      this.subscriptions[nameOrSubscriptions] = subscription;\n    } else {\n      throw new Error(`Invalid name or subscription: ${nameOrSubscriptions}`);\n    }\n  }\n\n  has = name => !!this.get(name)\n\n  get = name => this.subscriptions[name]\n\n  unsubscribe = (name = '') => {\n    const { subscriptions } = this;\n\n    if (!name) {\n      Object.keys(subscriptions).reduce(unsubscribeFrom, subscriptions);\n\n      this.subscriptions = {};\n    } else {\n      unsubscribeFrom(subscriptions, name);\n\n      delete subscriptions[name];\n    }\n  }\n}\n\nexport default SubscriptionManager;\n","const APPROX_MAX_DIFFERENCE = 20;\n\nexport const toTouchEvent = (e) => {\n  e.preventDefault();\n\n  const mainTouch = e.touches[0];\n\n  const { screenX, screenY } = mainTouch;\n  \n  return { x: screenX, y: screenY };\n};\n\nexport const getWinningRestingPoint = (args) => {\n  const { restingPoints } = args;\n\n  const restingPointResult = restingPoints.reduce((target, restingPoint) => {\n    const { score, position } = getRestingPointScore(restingPoint, args);\n    \n    if (score > target.score) return { score, position, restingPoint };\n\n    return target;\n  }, { score: 0, position: 0, restingPoint: null });\n  \n  return restingPointResult;\n};\n\nconst getRestingPointScore = (\n  { position: maybeRestingPointPosition, getPosition, gravity },\n  { position, velocity, slideEffect, element },\n) => {\n  let restingPointPosition = null;\n\n  if (Number.isInteger(maybeRestingPointPosition)) restingPointPosition = maybeRestingPointPosition;\n  else if (typeof getPosition === 'function') restingPointPosition = getPosition(element);\n\n  if (!position) return { score: 0, restingPointPosition: 0 };\n\n  return {\n    score: (gravity / Math.abs(restingPointPosition - (position + velocity * slideEffect))),\n    position: restingPointPosition,\n  };\n};\n\nconst getNextVelocity = (\n  velocity,\n  delta,\n  index\n) => {\n  const factor = (1 / (index + 1));\n\n  return velocity + (delta * factor);\n};\n\nexport const getVelocity = (deltas) => deltas.reduce(getNextVelocity, 0);\n\nconst signsAreDifferent = (a, b) => a * b < 0;\n\nconst clamp = (number, bottom, top) => {\n  if (number > top) return top;\n  if (number < bottom) return bottom;\n  return number;\n}\n\nexport const getBezierHandle = (velocity, delta, animationTime, { approxMaxDifference = APPROX_MAX_DIFFERENCE } = {}) => {\n  const averageVelocityForMove = delta * (animationTime / 1000) / 60;\n\n  const relativeMagnitudeOfVelocity = (Math.abs(velocity) - Math.abs(averageVelocityForMove)) / approxMaxDifference; // why 20?;\n  const clampedRMV = clamp(relativeMagnitudeOfVelocity, -1, 1);\n\n  let bezierA = -0.5 * clampedRMV + 0.5; // A = -(1/2)rmv + 0.5\n  let bezierB = 0.5 * clampedRMV + 0.5; // B = (1/2)rmv + 0.5\n\n  bezierA = clamp(bezierA, 0, 1); // prevent spilling outside logical range\n  bezierB = clamp(bezierB, -1, 1); // prevent spilling outside logical range\n\n  if (signsAreDifferent(velocity, averageVelocityForMove)) { // if moving in the wrong direction\n    bezierB *= -1; // flip B\n  }\n\n  // console.log({\n  //   bezierA,\n  //   bezierB,\n  //   delta,\n  //   relativeMagnitudeOfVelocity,\n  //   velocity,\n  //   averageVelocityForMove,\n  // });\n\n  return { bezierA, bezierB };\n}","import React, { Component } from 'react';\nimport CappedArray from './cappedArray';\nimport SubscriptionManager from './subscriptionManager';\nimport { getVelocity, getWinningRestingPoint, getBezierHandle, toTouchEvent } from './draggableHelpers';\nimport { fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { safelyCall } from './helpers';\n\nexport const AXIS = {\n  X: 'x',\n  Y: 'y',\n};\n\nconst DEFAULT_AXIS = AXIS.Y;\nconst DEFAULT_STARTING_POSITION = 0;\nconst DEFAULT_ANIMATION_MS = 600;\nconst DEFAULT_SLIDE_EFFECT = 15; \n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      axis = DEFAULT_AXIS,\n      startingPosition = DEFAULT_STARTING_POSITION,\n    } = props;\n    \n    this.axis = axis;\n    this.currentPosition = startingPosition;\n    \n    this.lastTouchPosition = null;\n    this.deltas = new CappedArray(3);\n\n    this.observables = null;\n    this.subscriptions = null;\n\n    this.draggableRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  componentWillUnmount() {\n    if (!this.subscriptions) return;\n    \n    this.subscriptions.unsubscribe();\n  }\n\n  init = () => {\n    if (this.observables || this.subscriptions) return;\n\n    const { current } = this.draggableRef || {};\n\n    console.log('init', current);\n\n    if (!current) return;\n\n    const touchStart$ = fromEvent(current, 'touchstart').pipe(map(toTouchEvent));\n    const touchEnd$ = fromEvent(current, 'touchend');\n    const touchMove$ = fromEvent(current, 'touchmove').pipe(map(toTouchEvent));\n\n    this.observables = {\n      touchStart$,\n      touchEnd$,\n      touchMove$,\n    };\n\n    this.subscriptions = new SubscriptionManager({\n      handleTouchStart: touchStart$.subscribe(this.handleTouchStart),\n      handleTouchMove: touchMove$.subscribe(this.handleTouchMove),\n      handleTouchEnd: touchEnd$.subscribe(this.handleTouchEnd),\n    });\n  }\n\n  handleTouchStart = (e) => {\n    const { current } = this.draggableRef;\n    \n    if (!current) return;\n    \n    current.style.transition = '';\n  }\n\n  handleTouchMove = (e) => {\n    const touchPosition = e[this.axis];\n\n    if (this.lastTouchPosition) {\n      const delta = touchPosition - this.lastTouchPosition;\n\n      this.move(delta);\n    }\n\n    this.lastTouchPosition = touchPosition;\n  }\n\n  handleTouchEnd = () => {\n    this.animateToClosestRestingPoint();\n  }\n\n  move = (delta) => {\n    this.deltas.push(delta);\n\n    this.updatePosition(this.currentPosition + delta);\n  }\n\n  updatePosition = (pos) => {\n    const { current } = this.draggableRef;\n    if (!current) return;\n\n    current.style.transform = `translate${this.axis.toUpperCase()}(${pos}px)`;\n\n    this.currentPosition = pos;\n  }\n\n  animateTo = (\n    point,\n    animationDuration = (this.props.animationDuration || DEFAULT_ANIMATION_MS),\n    element = this.draggableRef.current,\n    velocity = this.getVelocity(),\n    position = this.currentPosition,\n  ) => {\n    const { position: targetPosition } = point;\n\n    if (!Number.isInteger(targetPosition) || !element) return;\n\n    const delta = targetPosition - position;\n\n    const { bezierA, bezierB } = getBezierHandle(velocity, delta, animationDuration);\n\n    element.style.transition = `transform ${animationDuration}ms cubic-bezier(${bezierA}, ${bezierB}, 0.5, 1)`;\n\n    this.deltas.clear();\n    this.lastTouchPosition = null;\n\n    const { onAnimateTo } = this.props;\n    safelyCall(onAnimateTo, {\n      point,\n      animationDuration,\n      element,\n      velocity,\n      position,\n    });\n\n    this.updatePosition(targetPosition);\n  }\n\n  getClosestRestingPoint = (\n    element = this.draggableRef.current,\n    position = this.currentPosition,\n    velocity = this.getVelocity(),\n  ) => {\n    const {\n      restingPoints,\n      slideEffect = DEFAULT_SLIDE_EFFECT,\n    } = this.props;\n\n    if (!restingPoints) return;\n\n    const restingPointResult = getWinningRestingPoint({\n      restingPoints,\n      position,\n      velocity,\n      slideEffect,\n      element,\n    });\n\n    return restingPointResult;\n  }\n  \n  animateToClosestRestingPoint = () => {\n    const { animationDuration = DEFAULT_ANIMATION_MS } = this.props;\n    const element = this.draggableRef.current;\n    const position = this.currentPosition;\n    const velocity = this.getVelocity();\n\n    const restingPointResult = this.getClosestRestingPoint(element, position, velocity);\n    \n    this.animateTo(\n      restingPointResult,\n      animationDuration,\n      element,\n      velocity,\n      position,\n    );\n  }\n\n  getVelocity = () => {\n    return getVelocity(this.deltas.get());\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return children({\n      draggableRef: this.draggableRef,\n      animateTo: this.animateTo,\n      getClosestRestingPoint: this.getClosestRestingPoint,\n      animateToClosestRestingPoint: this.animateToClosestRestingPoint,\n    });\n  }\n}\n\nexport default Draggable;\n","import { Component } from 'react';\nimport SubscriptionManager from './subscriptionManager';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nclass ResizeHook extends Component {\n  constructor(props) {\n    super(props);\n\n    this.subscriptions = new SubscriptionManager();\n  }\n  \n  componentDidMount() {\n    const resize$ = fromEvent(window, 'resize').pipe(\n      debounceTime(100),\n    );\n\n    const resizeSubscription = resize$.subscribe(this.handleResize);\n\n    this.subscriptions.add('resize', resizeSubscription);\n  }\n\n  componentWillUnmount() {\n    this.subscriptions.unsubscribe();\n  }\n\n  handleResize = (e) => {\n    const { onResize } = this.props;\n\n    onResize(e);\n  }\n\n  render() { return null; }\n}\n\nexport default ResizeHook;\n","import React, { Component } from 'react';\nimport Draggable, { AXIS } from './Draggable';\nimport styled from '@emotion/styled';\nimport ResizeHook from './ResizeHook';\n\nconst getAwayPosition = (el) => el.parentElement.clientHeight - 100;\n\nconst HOME_POINT = {\n  id: 1,\n  position: 0,\n  gravity: 10,\n};\n\nconst AWAY_POINT = {\n  id: 2,\n  getPosition: getAwayPosition,\n  gravity: 10,\n};\n\nclass DraggableCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.restingPoints = [HOME_POINT, AWAY_POINT];\n    this.currentRestingPoint = this.restingPoints[0];\n  }\n  \n  state = {\n    currentRestingPoint: HOME_POINT,\n  }\n\n  getRestingPointFromId = () => {\n    this.restingPoints.find(({ }))\n  }\n\n  handleAnimateTo = ({ point }) => {\n    if (!point) return;\n    console.log(point);\n    const { id } = point.restingPoint;\n\n    this.currentRestingPoint = this.restingPoints.find(rp => rp.id === id);\n    console.log(this.currentRestingPoint);\n  }\n\n  handleClick = (animateTo, draggableRef) => {\n    console.log(this.currentRestingPoint);\n    const { id: restingPointId } = this.currentRestingPoint;\n    if (restingPointId === HOME_POINT.id) animateTo({ position: getAwayPosition(draggableRef.current), restingPoint: AWAY_POINT });\n    else animateTo({ position: HOME_POINT.position, restingPoint: HOME_POINT });\n  }\n  \n  render() {\n    return (\n      <Draggable\n        restingPoints={this.restingPoints}\n        axis={AXIS.Y}\n        animationDuration={600}\n        onAnimateTo={this.handleAnimateTo}\n      >\n        {({ draggableRef, animateTo, animateToClosestRestingPoint }) => (\n          <>\n            <button\n              onClick={() => this.handleClick(animateTo, draggableRef)}\n              type=\"button\"\n              style={{ position: 'absolute', top: 0, right: 0 }}\n            >\n              Hi\n            </button>\n            <ResizeHook onResize={() => animateToClosestRestingPoint()} />\n            <Card ref={draggableRef}></Card>\n          </>\n        )}\n      </Draggable>\n    )\n  };\n}\n\nconst Card = styled.div`\n  width: 100px;\n  height: 100px;\n  background: red;\n  position: absolute;\n`;\n\nexport default DraggableCard;\n","import React, { Component } from 'react';\nimport './App.css';\nimport DragContainer from './DragContainer';\nimport DraggableCard from './DraggableCard';\n\nclass App extends Component {\n  render() {\n    return (\n      <DragContainer>\n        <DraggableCard>\n          <span>Hello</span>\n        </DraggableCard>\n      </DragContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}